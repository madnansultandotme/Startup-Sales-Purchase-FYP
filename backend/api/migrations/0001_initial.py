# Generated by Django 5.2.5 on 2025-08-13 22:26

import django.contrib.auth.models
import django.contrib.auth.validators
import django.core.validators
import django.db.models.deletion
import django.utils.timezone
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('is_active', models.BooleanField(default=True)),
                ('email_verified', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to.', related_name='api_user_set', related_query_name='api_user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='api_user_set', related_query_name='api_user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'db_table': 'users',
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Startup',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('title', models.CharField(max_length=200, validators=[django.core.validators.MinLengthValidator(5)])),
                ('role_title', models.CharField(blank=True, max_length=100)),
                ('description', models.TextField(validators=[django.core.validators.MinLengthValidator(20)])),
                ('field', models.CharField(max_length=100)),
                ('website_url', models.URLField(blank=True, validators=[django.core.validators.URLValidator()])),
                ('stages', models.JSONField(blank=True, default=list)),
                ('revenue', models.CharField(blank=True, max_length=50)),
                ('profit', models.CharField(blank=True, max_length=50)),
                ('asking_price', models.CharField(blank=True, max_length=50)),
                ('ttm_revenue', models.CharField(blank=True, max_length=50)),
                ('ttm_profit', models.CharField(blank=True, max_length=50)),
                ('last_month_revenue', models.CharField(blank=True, max_length=50)),
                ('last_month_profit', models.CharField(blank=True, max_length=50)),
                ('earn_through', models.CharField(blank=True, max_length=50)),
                ('phase', models.CharField(blank=True, max_length=50)),
                ('team_size', models.CharField(blank=True, max_length=50)),
                ('type', models.CharField(choices=[('marketplace', 'Marketplace'), ('collaboration', 'Collaboration')], default='marketplace', max_length=20)),
                ('category', models.CharField(choices=[('saas', 'SaaS'), ('ecommerce', 'E-commerce'), ('agency', 'Agency'), ('other', 'Other')], default='other', max_length=20)),
                ('status', models.CharField(choices=[('active', 'Active'), ('inactive', 'Inactive'), ('sold', 'Sold'), ('paused', 'Paused')], default='active', max_length=20)),
                ('views', models.IntegerField(default=0)),
                ('featured', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('owner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='startups', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'startups',
            },
        ),
        migrations.CreateModel(
            name='Position',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('title', models.CharField(max_length=100)),
                ('description', models.TextField(blank=True)),
                ('requirements', models.TextField(blank=True)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('startup', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='positions', to='api.startup')),
            ],
            options={
                'db_table': 'positions',
            },
        ),
        migrations.CreateModel(
            name='Application',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('cover_letter', models.TextField(blank=True)),
                ('experience', models.TextField(blank=True)),
                ('portfolio_url', models.URLField(blank=True)),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('approved', 'Approved'), ('rejected', 'Rejected'), ('withdrawn', 'Withdrawn')], default='pending', max_length=20)),
                ('notes', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('applicant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='applications', to=settings.AUTH_USER_MODEL)),
                ('position', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='applications', to='api.position')),
                ('startup', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='applications', to='api.startup')),
            ],
            options={
                'db_table': 'applications',
            },
        ),
        migrations.CreateModel(
            name='StartupTag',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('tag', models.CharField(max_length=100)),
                ('startup', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='tags', to='api.startup')),
            ],
            options={
                'db_table': 'startup_tags',
            },
        ),
        migrations.CreateModel(
            name='UserSession',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('token_hash', models.CharField(max_length=255)),
                ('expires_at', models.DateTimeField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sessions', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'user_sessions',
            },
        ),
        migrations.AddIndex(
            model_name='user',
            index=models.Index(fields=['email'], name='users_email_4b85f2_idx'),
        ),
        migrations.AddIndex(
            model_name='user',
            index=models.Index(fields=['username'], name='users_usernam_baeb4b_idx'),
        ),
        migrations.AddIndex(
            model_name='startup',
            index=models.Index(fields=['owner'], name='startups_owner_i_08696e_idx'),
        ),
        migrations.AddIndex(
            model_name='startup',
            index=models.Index(fields=['type'], name='startups_type_f2c554_idx'),
        ),
        migrations.AddIndex(
            model_name='startup',
            index=models.Index(fields=['category'], name='startups_categor_0ef762_idx'),
        ),
        migrations.AddIndex(
            model_name='startup',
            index=models.Index(fields=['status'], name='startups_status_20df66_idx'),
        ),
        migrations.AddIndex(
            model_name='startup',
            index=models.Index(fields=['created_at'], name='startups_created_832f8f_idx'),
        ),
        migrations.AddIndex(
            model_name='position',
            index=models.Index(fields=['startup'], name='positions_startup_64a952_idx'),
        ),
        migrations.AddIndex(
            model_name='application',
            index=models.Index(fields=['startup'], name='application_startup_ba38ed_idx'),
        ),
        migrations.AddIndex(
            model_name='application',
            index=models.Index(fields=['applicant'], name='application_applica_69ff6a_idx'),
        ),
        migrations.AddIndex(
            model_name='application',
            index=models.Index(fields=['status'], name='application_status_e61111_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='application',
            unique_together={('startup', 'position', 'applicant')},
        ),
        migrations.AddIndex(
            model_name='startuptag',
            index=models.Index(fields=['startup', 'tag'], name='startup_tag_startup_aa6045_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='startuptag',
            unique_together={('startup', 'tag')},
        ),
        migrations.AddIndex(
            model_name='usersession',
            index=models.Index(fields=['user'], name='user_sessio_user_id_eb20aa_idx'),
        ),
        migrations.AddIndex(
            model_name='usersession',
            index=models.Index(fields=['token_hash'], name='user_sessio_token_h_e8cef0_idx'),
        ),
        migrations.AddIndex(
            model_name='usersession',
            index=models.Index(fields=['expires_at'], name='user_sessio_expires_66ae96_idx'),
        ),
    ]
